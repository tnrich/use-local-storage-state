it(`changing localStorage items should trigger refetches when necessary`, () => {
    cy.visit('')
    cy.contains(`color from use-local: defaultColor`)
    cy.contains(`name from use-local: nameAlreadySetInLocalStorage`)
    cy.contains(`notes from use-local: default,notes`)
    cy.contains(`color from use-local nested: defaultColor`)
    cy.contains(`jsonifiedString from use-local: "default jsonified string val"`)
    cy.contains(`name from use-local nested: nameAlreadySetInLocalStorage`)
    cy.contains(`notes from use-local nested: default,notes`)
    cy.contains(`age from use-local nested: 40`)
    cy.contains(`nested localStorage.getItem("color"): defaultColor`)
    cy.contains(`nested localStorage.getItem("name"): nameAlreadySetInLocalStorage`)
    cy.contains(`nested localStorage.getItem("notes"): ["default","notes"]`)
    cy.contains(`click me to manually update localStorage`).click()
    cy.contains(`color from use-local: colorFromLocalStorage`)
    cy.contains(`jsonifiedString from use-local: jsonifiedStringFromLocalStorage`)
    cy.contains(`color from use-local nested: colorFromLocalStorage`)
    cy.contains(`name from use-local nested: nameFromLocalStorage`)
    cy.contains(`age from use-local nested: 1`)
    cy.contains(`notes from use-local nested: default,nestedNotes`)
    cy.contains(`click me to update via nested use-local-storage-state hook`).click()
    cy.contains(`color from use-local: colorFromHook2`)
    cy.contains(`localStorage.getItem("color"): colorFromHook2`)
    cy.contains(`age from use-local: 22`)
    cy.contains(`age from use-local nested: 22`)
    cy.contains(`nested localStorage.getItem("age"): 22`)
    cy.contains(`nested localStorage.getItem("notes"): ["noteFromNestedHook","anotherNoteFromNestedHook"]`)
    cy.contains(`localStorage.getItem("notes"): ["noteFromNestedHook","anotherNoteFromNestedHook"]`)
    cy.contains(`notes from use-local: noteFromNestedHook,anotherNoteFromNestedHook`)
})
